#!/usr/bin/env node
/**
 * Created by ikonovalov on 22/06/17.
 */
'use strict';
require('colors');


const
    commandLineArgs = require('command-line-args'),
    cliOptions = require('../src/cli-options'),
    fs = require('fs'),
    async = require('async'),
    path = require('path');

const
    optionDefinitions = cliOptions.definitions,
    options = commandLineArgs(optionDefinitions);

//=========================================================
// print version only
if (options.version) {
    output.printVersionAndExit();
}

// print help only
if (options.help) {
    output.printHelpAndExit();
}

// Check parameters
cliOptions.checkMandatoryOptions(options);

let tagPath = path.resolve(options.tag);
let encryptedFilePath = path.resolve(options.file);
let publicKeyPath = path.resolve(options.public);

console.log(`Tag path ${tagPath}`);
console.log(`Encrypted file path ${encryptedFilePath}`);
console.log(`Public key path ${publicKeyPath}`);

async.series(
    [
        (callback) => fs.readFile(tagPath, callback),
        (callback) => fs.readFile(publicKeyPath, callback)
    ],
    (error, result) => {
        if (error) { console.log(error); process.exit(1)}
        let tag = result[0].toString();
        let publicKeyHex = result[1].toString();
        console.log(tag);
        console.log(publicKeyHex);
    });

